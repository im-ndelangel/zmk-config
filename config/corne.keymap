/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//Layer definitions
#define COLEMAK 0
#define QWERTY 1
#define RAISE 2
#define LOWER 3
#define NUMPAD 4
#define SPECIAL 5
#define FUNCTION 6
/*#define MINE 7
#define MINERAISE 8
#define ADJUST 9
*/
/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp SQT>;
            layers = <QWERTY COLEMAK>;
        };
       /* combo_castle {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(LS(C))>;
            layers = <AOE AOERAISE>;
        };*/
    };
    behaviors {
        mt_s: ctrl_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_CTRL_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        mt_l: alt_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_ALT_GUI";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
            compatible = "zmk,keymap";

            colemak {
// GASC home row mods. Layer key mods. Mod tap for zxcv. Mod tap for backspace/shift
// -----------------------------------------------------------------------------------------
// |    |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L  |  U  |  Y  |  ;  |      |
// |    |  A  |  R  |  S  |  T  |  D  |   |  H  |  N  |  E  |  I  |  O  |  '   |
// |    |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M  |  ,  |  .  |  /  | CAPS |
//                       | TAB | LWR | SPC |   | ENT | RSE | BSPC|
//                             | ESC |               | DEL |
        bindings = <
    &kp TAB     &kp Q          &mt_l LC(W) W    &kp F           &kp P           &kp G           /**/    &kp J                   &kp L           &kp U           &kp Y        &kp EQUAL        &sl SPECIAL
    &kp BSPC    &mt_l LGUI A   &mt_l LALT R     &mt_s LSHFT S   &mt_s LCTRL T   &kp D           /**/    &kp H                   &mt_s LSHFT N   &mt_s LALT E   &mt_l LCTRL I &mt_l LGUI O   &kp ESC
    &kp LSHFT   &mt_l LC(Z) Z  &mt_l LC(X) X    &mt_l LC(C) C   &mt_l LC(V) V   &mt_l LC(B) B   /**/    &kp K                   &kp M           &kp COMMA      &kp DOT       &kp MINUS       &kp LALT
                                            &kp LGUI   &kp LCTRL   &lt RAISE ENTER       /**/    &lt LOWER SPACE   &kp LSHFT   &sl NUMPAD
                        >;
            };


            qwerty {
// GASC home row mods. Layer key mods. Mod tap for zxcv. Mod tap for backspace/shift
// -----------------------------------------------------------------------------------------
// |    |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |      |
// |    |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
// |    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | CAPS |
//                       | TAB | LWR | SPC |   | ENT | RSE | BSPC|
//                             | ESC |               | DEL |
        bindings = <
    &none   &kp Q           &mt_l LC(W) W   &kp E           &mt_l LC(R) R   &mt_l LC(T) T   /**/    &kp Y           &kp U           &mt_l LC(I) I  &kp O        &kp P           &none
    &none   &mt_l LGUI A    &mt_l LALT S    &mt_s LSHFT D   &mt_s LCTRL F   &kp G           /**/    &kp H           &mt_s LCTRL J   &mt_s LSHFT K  &mt_l LALT L &mt_l LGUI SEMI &kp SQT
    &none   &mt_l LC(Z) Z   &mt_l LC(X) X   &mt_l LC(C) C   &mt_l LC(V) V   &mt_l LC(B) B   /**/    &mt_l LC(N) N   &kp M           &kp COMMA      &kp DOT      &kp FSLH        &kp CAPS
                                            &kp LGUI   &kp LCTRL   &lt RAISE ENTER       /**/    &lt LOWER SPACE   &kp LSHFT   &sl NUMPAD
                        >;
            };


            raise {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// |      | HME | PGU | PGD | END | XXX |   | XXX | LFT | DWN |  UP | RGT |      |
// |      | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | CAPS |
//                    |     |     |     |   |     |     |     |
        bindings = <
    &kp ESC  &none      &none      &none        &none               &none      /**/      &none  &none          &none      &none        &none       &none
    &kp DEL   &kp LEFT  &kp DOWN   &kp UP       &kp  RIGHT          &trans       /**/    &none  &kp LSHFT      &kp LALT   &kp LCTRL    &kp LGUI    &none
    &kp LALT  &none     &none      &kp LC(LG(RIGHT)) &kp LC(LG(RIGHT)) &none  /**/       &none  &none          &kp SEMI   &kp COLON    &kp UNDER   &none
                                   &trans       &tans                &trans      /**/    &trans &trans              &trans
                        >;
            };

            lower {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  {  |  }  | DEL  |
// |      |  -  |  _  |  =  |  +  |  `  |   |  ~  |  (  |  )  |  [  |  ]  |      |
// |      | Und | Cut | Cpy | Pst |     |   | PLY |  V+ |  V- | MTE |  \  |      |
//                    |     |     |     |   |     |     |     |
        bindings = <
    &trans  &kp LBKT   &kp RBKT       &kp BSLH    &kp FSLH  &kp AMPS /**/    &none      &kp PLUS       &kp STAR       &none         &none       &trans
    &trans  &kp MINUS  &kp UNDER    &kp EQUAL   &kp PLUS    &kp PIPE   /**/    &kp GRAVE    &kp SQT    &kp DQT        &kp LT        &kp GT      &kp ESC    
    &trans  &none      &kp PERCENT    &kp DOLLAR   &kp HASH   &kp AT       /**/    &none       &none      &kp SEMI        &kp COLON    &kp UNDER   &trans
                                    &trans      &trans      &trans      /**/    &trans      &trans      &trans
                        >;
            };

            numpad {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |     |     |   [  |  ]  |  *   |   | VOL+ |  7    |  8    |  9   |       |      |
// |       |  -  |  _  |   =  |  +  |  `   |   | VOL- |  4    |  5    |  6   |   |   |      |
// |       |  {  |  }  |   (  |  )  |  ~   |   | PLAY |  1    |  2    |  3   |   \   |      |
//                     |      |     |      |   | MUTE |  0    |  .    |
        bindings = <
    &none	&none	    &none       &kp LBKT	&kp RBKT  	&kp STAR    /**/    &kp PERCENT &kp PLUS    &kp STAR	&kp DOT     &kp EQUAL   &none
	&none   &kp N1	    &kp N2	    &kp N3      &kp N4	    &kp N5   /**/       &kp N6      &kp N7      &kp N8      &kp N9	    &kp N0  	&none
	&none   &kp LBRC    &kp RBRC	&kp LPAR    &kp RPAR   	&kp TILDE   /**/	&none	    &none       &kp SEMI    &kp DOT     &kp MINUS   &trans
	                    		    &trans       &trans      &trans      /**/    &none       &mo FUNCTION    &none
                        >;
            };            
            SPECIAL {
// -------------------------------------   -------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BSPC|
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '  |
// | CTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | CAPS|
//                   | LALT| AOER|SH/SP|   |LSHFT| XXX | DEL |
// -------------------------------------   -------------------------------------
        bindings = <
    &kp ESC     &kp Q   &kp W   &kp E       &kp R               &kp T           /**/    &kp Y       &kp U       &kp I       &kp O   &kp P       &kp BSPC
    &kp TAB     &kp A   &kp S   &kp D       &kp F               &kp G           /**/    &kp H       &kp J       &kp K       &kp L   &kp SEMI    &kp SQT
    &kp LCTRL   &kp Z   &kp X   &kp C       &kp V               &kp B           /**/    &kp N       &kp M       &kp COMMA   &kp DOT &kp FSLH    &kp CAPS
                                &trans      &trans              &trans      /**/        &trans      &trans      &trans
                    >;
            };
            FUNCTION {
// -------------------------------------   -------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |   |     |     |     |     |     |     |
// |LS(0)|LS(1)|LS(2)|LS(3)|LS(4)|LS(5)|   |     |     |     |     |     |     |
// |SC(G)|SC(Q)|SC(W)|SC(E)|SC(R)|SC(T)|   |     |     |     |     |     |     |
//                   |     |     |     |   |     | ADJ |     |
// -------------------------------------   -------------------------------------
        bindings = <
    &bootloader     &none   &kp F7   &kp F8   &kp F9   &kp F10   /**/    &trans     &C_PLAY_PAUSE   &C_VOL_UP    &C_VOL_DN      &C_MUTE         &trans
    &none           &none   &kp F4   &kp F5   &kp F6   &kp F12   /**/    &none      &kp LSHFT       &kp LALT     &kp LCTRL      &kp LGUI        &none
    &none           &none   &kp F1   &kp F2   &kp F3   &kp F11  /**/     &bt BT_CLR &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4 
                         &trans    &trans       &trans          /**/    &trans      &trans     &trans
                    >;
            };
    };
};
